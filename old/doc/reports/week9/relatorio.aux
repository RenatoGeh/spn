\relax 
\providecommand\hyper@newdestlabel[2]{}
\catcode `"\active 
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\abx@aux@sortscheme{nty}
\abx@aux@cite{gens-domingos}
\abx@aux@cite{poon-domingos}
\abx@aux@cite{report-1}
\abx@aux@cite{report-2}
\abx@aux@cite{project-def}
\@writefile{toc}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lof}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lot}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\select@language{brazilian}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\select@language{brazilian}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\select@language{brazilian}}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\select@language{brazilian}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1}Atividades realizadas na semana}{1}{section.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Durante a semana foram lidos as seguintes partes dos papers abaixo: }{1}{paragraph*.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2}Defini\IeC {\c c}\IeC {\~a}o das atividades}{1}{section.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Os t\IeC {\'o}picos mencionados na se\IeC {\c c}\IeC {\~a}o anterior referem-se \IeC {\`a} defini\IeC {\c c}\IeC {\~a}o de uma Sum-Product Network e citam algumas semelhan\IeC {\c c}as com outros modelos probabil\IeC {\'\i }sticos assim como suas diferen\IeC {\c c}as. }{1}{paragraph*.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Neste relat\IeC {\'o}rio vamos definir o que s\IeC {\~a}o Sum-Product Networks de uma forma mais did\IeC {\'a}tica e vamos supor que o leitor tenha conhecimento pr\IeC {\'e}vio de todo conte\IeC {\'u}do coberto nos relat\IeC {\'o}rios anteriores. Ap\IeC {\'o}s termos definido Sum-Product Networks, vamos ver algumas propriedades e teoremas relacionados e em seguida vamos comparar, de forma sucinta, com outros modelos probabil\IeC {\'\i }sticos. O conte\IeC {\'u}do presente nesse relat\IeC {\'o}rio \IeC {\'e} baseado fortemente nos dois papers acima. }{1}{paragraph*.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Vamos separar esta se\IeC {\c c}\IeC {\~a}o nos seguintes t\IeC {\'o}picos: }{1}{paragraph*.4}}
\abx@aux@cite{report-5}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Introdu\IeC {\c c}\IeC {\~a}o}{2}{subsection.2.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Um dos maiores problemas com modelos gr\IeC {\'a}ficos \IeC {\'e} a intractabilidade da infer\IeC {\^e}ncia e aprendizado da estrutura. Infer\IeC {\^e}ncia \IeC {\'e} sempre exponencial no pior caso, e como aprendizado usa infer\IeC {\^e}ncia, a complexidade continua intrat\IeC {\'a}vel. Al\IeC {\'e}m do mais, a amostragem necess\IeC {\'a}ria para aprendizado preciso \IeC {\'e} tamb\IeC {\'e}m exponencial no pior dos casos no tamanho do escopo. De fato existem modelos gr\IeC {\'a}ficos onde a infer\IeC {\^e}ncia \IeC {\'e} trat\IeC {\'a}vel, no entanto elas s\IeC {\~a}o limitadas quanto \IeC {\`a}s representa\IeC {\c c}\IeC {\~o}es de distribui\IeC {\c c}\IeC {\~o}es de forma compacta. }{2}{paragraph*.5}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Vamos mostrar que Sum-Product Networks (SPN), um novo tipo de arquitetura profunda, permite que computemos a fun\IeC {\c c}\IeC {\~a}o parti\IeC {\c c}\IeC {\~a}o, a probabilidade de evid\IeC {\^e}ncia e o estado MAP\cite {report-1} com complexidade linear no n\IeC {\'u}mero de arestas da SPN. Tamb\IeC {\'e}m vamos definir validade de uma SPN assim como completude e consist\IeC {\^e}ncia. Depois vamos mostrar outras defini\IeC {\c c}\IeC {\~o}es assim como alguns teoremas derivados dessas propriedades. }{2}{paragraph*.6}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Antes de come\IeC {\c c}armos a definir Sum-Product Networks, precisamos antes explicar o que \IeC {\'e} uma distribui\IeC {\c c}\IeC {\~a}o normalizada de produtos de factors e definir uma fun\IeC {\c c}\IeC {\~a}o de parti\IeC {\c c}\IeC {\~a}o. }{2}{paragraph*.7}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Distribui\IeC {\c c}\IeC {\~a}o normalizada de produtos de factors}{2}{subsubsection.2.1.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ O objetivo de modelos gr\IeC {\'a}ficos probabil\IeC {\'\i }sticos \IeC {\'e} representar distribui\IeC {\c c}\IeC {\~o}es de forma compacta. Podemos representar tais distribui\IeC {\c c}\IeC {\~o}es como um produto normalizado dos factors\cite {report-2} envolvidos. Tal representa\IeC {\c c}\IeC {\~a}o \IeC {\'e} um jeito compacto de se representar as CPTs envolvidas. }{2}{paragraph*.8}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ A representa\IeC {\c c}\IeC {\~a}o acima \IeC {\'e} dita normalizada pois queremos representa-la como uma probabilidade, ou seja, um n\IeC {\'u}mero real no intervalo $[0, 1]$. Como pode-se notar, dividimos o produt\IeC {\'o}rio por $Z$, a chamada fun\IeC {\c c}\IeC {\~a}o parti\IeC {\c c}\IeC {\~a}o. De fato, como veremos a seguir, a fun\IeC {\c c}\IeC {\~a}o parti\IeC {\c c}\IeC {\~a}o normaliza o produto dos factors. }{2}{paragraph*.9}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Fun\IeC {\c c}\IeC {\~a}o de parti\IeC {\c c}\IeC {\~a}o}{2}{subsubsection.2.1.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Dizemos a fun\IeC {\c c}\IeC {\~a}o parti\IeC {\c c}\IeC {\~a}o uma fun\IeC {\c c}\IeC {\~a}o que toma como argumentos todos os estados das vari\IeC {\'a}veis e retorna a soma de todos os produt\IeC {\'o}rios de todos os factors de cada estado. }{2}{paragraph*.10}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Portanto, \IeC {\'e} f\IeC {\'a}cil notar que $\frac  {1}{Z} \DOTSB \prod@ \slimits@ _k \phi _k (x_{\{k\}})$ \IeC {\'e} uma normaliza\IeC {\c c}\IeC {\~a}o por $Z$, j\IeC {\'a} que $Z$ \IeC {\'e} a soma de todos os poss\IeC {\'\i }veis resultados do produt\IeC {\'o}rio, e portanto ser\IeC {\'a} sempre maior ou igual ao valor do produt\IeC {\'o}rio normalizado, levando a $0 \leq P(X = x) \leq 1$, assumindo-se que $\phi _i \geq 0$. }{3}{paragraph*.11}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ No caso de $Z=1$, ent\IeC {\~a}o temos o caso trivial onde o produt\IeC {\'o}rio dos factors dada uma inst\IeC {\^a}ncia j\IeC {\'a} est\IeC {\'a} dentro do intervalo $[0,1]$. }{3}{paragraph*.12}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Uma das dificuldades de se computar infer\IeC {\^e}ncia em modelos gr\IeC {\'a}ficos \IeC {\'e} a intractabilidade de $Z$, j\IeC {\'a} que $Z$ \IeC {\'e} a soma de um n\IeC {\'u}mero exponencial de termos. Como todas as marginals\cite {report-5} s\IeC {\~a}o somas de subconjuntos desses termos, computa-las \IeC {\'e} igualmente intrat\IeC {\'a}vel. No entanto, se acharmos uma maneira eficiente de computar $Z$, ent\IeC {\~a}o tamb\IeC {\'e}m podemos computar as marginals eficientemente. Mas $Z$ \IeC {\'e} computado apenas com somas e produtos, e pode ser eficientemente computado se aplicarmos a distributiva em $Z$ de tal forma que envolvamos um n\IeC {\'u}mero polinomial de somas e produtos. }{3}{paragraph*.13}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Defini\IeC {\c c}\IeC {\~a}o}{3}{subsection.2.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Assim como em [P. Domingos, H. Poon]\cite {poon-domingos}, vamos introduzir Sum-Product Networks com vari\IeC {\'a}veis Booleanas. Mais para frente veremos que para vari\IeC {\'a}veis discretas ou cont\IeC {\'\i }nuas o processo \IeC {\'e} similar. }{3}{paragraph*.14}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Antes de definirmos SPNs, vamos introduzir algumas nota\IeC {\c c}\IeC {\~o}es: }{3}{paragraph*.15}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Seja $\Phi (x) \geq 0$ uma distribui\IeC {\c c}\IeC {\~a}o de probabilidade n\IeC {\~a}o-normalizada. A network polynomial \cite {report-1} de $\Phi (x)$ \IeC {\'e} $\DOTSB \sum@ \slimits@ _x \Phi (x) \Pi (x)$, onde $\Pi (x)$ \IeC {\'e} o produto dos indicadores que tenham valor 1 no estado $x$. Lembrando o que vimos nos relat\IeC {\'o}rios anteriores, a network polynomial da Rede Bayesiana $X_1 \to X_2$ \IeC {\'e} $P(x_1)P(x_2|x_1)x_1x_2+P(x_1) P(\overline  {x}_2|x_1)x_1\overline  {x}_2+P(\overline  {x}_1)P(x_2|\overline  {x}_1)\overline  {x}_1x_2+ P(\overline  {x}_1)P(\overline  {x}_2|\overline  {x}_1)\overline  {x}_1\overline  {x}_2$. }{3}{paragraph*.16}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ A fun\IeC {\c c}\IeC {\~a}o parti\IeC {\c c}\IeC {\~a}o \IeC {\'e} o valor da network polynomial quando todos os indicadores s\IeC {\~a}o 1. Para qualquer evid\IeC {\^e}ncia $e$, computar $P(e)=\Phi (e)/Z$ \IeC {\'e} linear no tamanho da network polynomial, que por sua vez tem tamanho exponencial em n\IeC {\'u}mero de vari\IeC {\'a}veis. No entanto, podemos representar e avaliar a network polynomial em tempo e espa\IeC {\c c}o polynomial usando Sum-Product Networks. }{3}{paragraph*.17}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Vamos a seguir ver a defini\IeC {\c c}\IeC {\~a}o de SPNs dada por P. Domingos e H. Poon\cite {poon-domingos}. }{3}{paragraph*.18}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces A esquerda uma SPN implementando uma naive Bayes mixture model. A direita uma SPN implementando uma junction tree. [P. Domingos, H. Poon]\cite {poon-domingos}\relax }}{3}{figure.caption.19}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Vamos assumir sem perda de generalidade que n\IeC {\'o}s somas e n\IeC {\'o}s produtos est\IeC {\~a}o organizados de tal forma que somas s\IeC {\~a}o sempre alternadas com produtos e vice-versa. Ou seja, se $i$ \IeC {\'e} um n\IeC {\'o} soma, ent\IeC {\~a}o $\forall x \in Ch(i)$, $x$ \IeC {\'e} ou um n\IeC {\'o} produto ou uma folha (e portanto uma vari\IeC {\'a}vel). Analogamente, se $i$ \IeC {\'e} um n\IeC {\'o} produto, ent\IeC {\~a}o $\forall x \in Ch(i)$, $x$ \IeC {\'e} ou um n\IeC {\'o} soma ou folha. }{4}{paragraph*.20}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Denotamos a Sum-Product Network $S$ como uma fun\IeC {\c c}\IeC {\~a}o das vari\IeC {\'a}veis indicadoras $x_1,...,x_d$ e $\overline  {x}_1,...,\overline  {x}_d$ como $S(x_1,...,x_d,\overline  {x}_1,...,\overline  {x}_d)$. Um estado $x$ \IeC {\'e} completo quando para cada vari\IeC {\'a}vel $X_i$, seus indicadores nunca s\IeC {\~a}o iguais, ou seja, $x_i=1$ e $\overline  {x}_i=0$ ou $x_i=0$ e $\overline  {x}_i=1$. Se queremos $S$ em fun\IeC {\c c}\IeC {\~a}o de um estado $x$ completo, ent\IeC {\~a}o representamos como $S(x)$. Se os indicadores especificam uma evid\IeC {\^e}ncia\cite {project-def} $e$, ent\IeC {\~a}o abreviamos como $S(e)$. No caso de todos os indicadores serem valorados em 1, ent\IeC {\~a}o dizemos $S(*)$. }{4}{paragraph*.21}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ A subrede enraizada em um n\IeC {\'o} $n$ em uma SPN \IeC {\'e} uma SPN, e \IeC {\'e} representada como $S_n(.)$. Os valores de $S(x), \forall x \in \mathcal  {X}$ define uma distribui\IeC {\c c}\IeC {\~a}o de probabilidade n\IeC {\~a}o-normalizada sob $\mathcal  {X}$. A probabilidade n\IeC {\~a}o-normalizada da evid\IeC {\^e}ncia $e$ \IeC {\'e} $\Phi _S(e)=\DOTSB \sum@ \slimits@ _{x \in e}S(x)$, onde a soma tem seus estados consistentes\cite {report-1} com $e$. A fun\IeC {\c c}\IeC {\~a}o parti\IeC {\c c}\IeC {\~a}o da distribui\IeC {\c c}\IeC {\~a}o definida por $S(x)$ \IeC {\'e} $Z_S = \DOTSB \sum@ \slimits@ _{x \in \mathcal  {X}} S(x)$. O escopo \cite {project-def} de uma SPN $S$ \IeC {\'e} o conjunto de vari\IeC {\'a}veis que aparecem em $S$. Uma vari\IeC {\'a}vel $X_i$ \IeC {\'e} negada em $S$ se $\overline  {x}_i$ \IeC {\'e} uma folha de $S$ e n\IeC {\~a}o-negada se $x_i$ \IeC {\'e} uma folha de $S$. }{4}{paragraph*.22}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ A partir disso podemos construir a defini\IeC {\c c}\IeC {\~a}o encontrada em [P. Domingos, R. Gens] \cite {gens-domingos}. }{4}{paragraph*.23}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Exemplificando com a Figura 1, a SPN $S$ ser\IeC {\'a}: }{4}{paragraph*.24}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ E a network polynomial ser\IeC {\'a} a expans\IeC {\~a}o de $S$, ou seja, $(0.5 \times 0.6 \times 0.3 + 0.2 \times 0.6 \times 0.2 + 0.3 \times 0.9 \times 0.2)x_1x_2 + ...$. Se um estado completo $x = \{X_1 = 1, X_2 = 0\}$, ent\IeC {\~a}o $S(x) = S(1, 0, 0, 1)$ Se a evid\IeC {\^e}ncia $e={X_1=1}$, ent\IeC {\~a}o $S(e)=S(1,1,0,1)$. E, por fim, $S(*) = S(1, 1, 1, 1)$. }{4}{paragraph*.25}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Propriedades}{4}{subsection.2.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Nesta subse\IeC {\c c}\IeC {\~a}o, vamos definir a validade de uma SPN, assim como completude e consist\IeC {\^e}ncia. Em seguida vamos provar que uma SPN \IeC {\'e} v\IeC {\'a}lida se \IeC {\'e} completa e consistente. Depois vamos definir representabilidade, complexidade da fun\IeC {\c c}\IeC {\~a}o parti\IeC {\c c}\IeC {\~a}o, decomponibilidade de uma SPN e finalmente provaremos que a fun\IeC {\c c}\IeC {\~a}o parti\IeC {\c c}\IeC {\~a}o, probabilidade de evid\IeC {\^e}ncia e o estado MAP\cite {report-1} de uma SPN podem ser computados em tempo linear no n\IeC {\'u}mero de arestas da SPN. }{4}{paragraph*.26}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ A Defini\IeC {\c c}\IeC {\~a}o 5 diz que a SPN sempre computa a probabilidade de evid\IeC {\^e}ncia corretamente, ent\IeC {\~a}o a SPN \IeC {\'e} v\IeC {\'a}lida. Em particular, se uma SPN $S$ \IeC {\'e} v\IeC {\'a}lida, ent\IeC {\~a}o $S(*)=Z_S$. Uma SPN v\IeC {\'a}lida computa a probabilidade de evid\IeC {\^e}ncia em tempo linear no n\IeC {\'u}mero de arestas, como provaremos mais a frente. }{5}{paragraph*.27}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ J\IeC {\'a} que uma SPN v\IeC {\'a}lida \IeC {\'e} linear, \IeC {\'e} prefer\IeC {\'\i }vel aprendermos apenas SPNs v\IeC {\'a}lidas. Vamos ver algumas outras condi\IeC {\c c}\IeC {\~o}es para a validade de uma SPN, mas para isso precisamos definir completude e consist\IeC {\^e}ncia. }{5}{paragraph*.28}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ A partir disso podemos construir o seguinte teorema de P. Domingos e H. Poon\cite {poon-domingos}. }{5}{paragraph*.29}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {paragraph}{ Completude e consist\IeC {\^e}ncia n\IeC {\~a}o s\IeC {\~a}o necess\IeC {\'a}rias para validade de uma SPN. Por exemplo, a rede $S(x_1,x_2,\overline  {x}_2,\overline  {x}_2) = \frac  {1}{2}x_1\overline  {x}_2 + \frac  {1}{2}x_1$ \IeC {\'e} incompleta e inconsist\IeC {\^e}nte, mas satisfaz $\Phi _S(e) = \DOTSB \sum@ \slimits@ _{x \in e} S(x)$ para toda evid\IeC {\^e}ncia $e$, e pela defini\IeC {\c c}\IeC {\~a}o de validade $S$ \IeC {\'e} v\IeC {\'a}lida. No entanto, completude e consist\IeC {\^e}ncia s\IeC {\~a}o necess\IeC {\'a}rias para afirmar que toda subrede de $S$ \IeC {\'e} v\IeC {\'a}lida. Tal hip\IeC {\'o}tese pode ser provada por contradi\IeC {\c c}\IeC {\~a}o. Seja $S$ um n\IeC {\'o} que viola ou a completude ou a consist\IeC {\^e}ncia da rede. Pode-se mostrar que $S$ n\IeC {\~a}o \IeC {\'e} v\IeC {\'a}lida, j\IeC {\'a} que ela ou subestima o valor da soma se \IeC {\'e} incompleta ou superestima se ela \IeC {\'e} inconsistente. }{6}{paragraph*.30}}
